<?xml version="1.0" encoding="UTF-8"?>

<mule
 	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:opentelemetry="http://www.mulesoft.org/schema/mule/opentelemetry"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/db 
		http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd		
		http://www.mulesoft.org/schema/mule/opentelemetry 
		http://www.mulesoft.org/schema/mule/opentelemetry/current/mule-opentelemetry.xsd">
	
	<flow name="query" > 
		<ee:transform doc:name="build query" >
			<ee:variables >
				<ee:set-variable variableName="query"><![CDATA[#[ 
				%dw 2.0
				output application/json

				fun addParameter(parameter, name, value) =
				  if ( !isEmpty(parameter) )
					{ (name): value}
					else {}

				fun where(data)=
				("  WHERE " ++ 
					((data filterObject ((value, key, index) ->
						(value != null and value != ""))
							mapObject ((value, key, index) ->
							{myData : (key) ++ " = " ++ (value)
				})).*myData joinBy  " AND ") 
				default "")

				---

				"SELECT top " ++ vars.maxRecords as String ++
				"  Id, FirstName, LastName, Email " ++
				" FROM contact  " ++
				where(
					addParameter(vars.id, 'Id', ':id') ++
					addParameter(vars.lastName, 'LastName', ':lastName') ++
					addParameter(vars.firstName, 'FirstName', ':firstName') ++
					addParameter(vars.email, 'Email', ':email')
				)						
			]]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>

		<logger doc:name="sql query" level="TRACE" category="app"
			message="#[output application/java --- vars.query]"/>

		<db:select doc:name="Select" config-ref="Database_Config">
			
            <db:sql><![CDATA[#[ vars.query ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{ 
				id: vars.id,
				firstName : vars.firstName,
				lastName : vars.lastName,
				email: vars.email,
				maxRecords: vars.maxRecords }]]]>
			</db:input-parameters>
		</db:select>

		<logger doc:name="result" 
			level="TRACE" 
			message="#[output application/json --- if ( payload != null) payload else 'No records found']"
			category="app"/>

		<logger doc:name="total records"
			level="DEBUG" 
			category="app" 
			message="#[${file::script-records-found.dwl}]"/>
			
		<ee:transform doc:name="Record Payload">
			<ee:message >
				<ee:set-payload ><![CDATA[${file::script-generate-payload.dwl}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
		<error-handler ref="global-error-handler" />
	</flow>
	
	<flow name="get-by-filter"  >
		<ee:transform doc:name="set filter and OpenTelemetry" >
			<ee:variables >

				<ee:set-variable variableName="firstName" >
					<![CDATA[attributes.queryParams.firstName]]>
				</ee:set-variable>
				<ee:set-variable variableName="lastName" >
					<![CDATA[attributes.queryParams.lastName]]>
				</ee:set-variable>
				<ee:set-variable variableName="email" >
					<![CDATA[attributes.queryParams.email]]>
				</ee:set-variable>
				<ee:set-variable variableName="maxRecords" >
					<![CDATA[attributes.queryParams.maxRecords default 100]]>
				</ee:set-variable>
				<ee:set-variable variableName="id" >
					<![CDATA[if (attributes.queryParams.id == null) attributes.uriParams.'id' else attributes.queryParams.id ]]>
				</ee:set-variable>
				<ee:set-variable variableName="openTelemetryTags" ><![CDATA[%dw 2.0
				output application/java
				---
				{
				    "firstName": attributes.queryParams.firstName default "",
				    "lastName": attributes.queryParams.lastName default "",
				    "email": attributes.queryParams.email default "",
					"maxRecords": attributes.queryParams.maxRecords default "100",
				    "id": (if (attributes.queryParams.id == null) attributes.uriParams.'id' else attributes.queryParams.id) default ""
				}]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>

		<logger doc:name="get by filter"
			level="INFO" category="app"
			message="#[output application/java --- 'Query by firstName=' ++ (vars.firstName default '') ++ ', lastName=' ++ (vars.lastName default '') ++ ', email=' ++ (vars.email default '') ++ ', id=' ++ (vars.id default '')  ++ ', maxRecords=' ++ (vars.maxRecords default '') ]" />

		<choice doc:name="verify query parameters" >
			<when expression="#[vars.firstName != null or vars.lastName != null or vars.email != null or vars.id != null  ]">
				<flow-ref doc:name="query" name="query"/>
			</when>

			<otherwise >				
				<ee:transform doc:name="Status 400 Response" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0 output application/json --- { message: "${messages.one-query-filter}"}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable 
							variableName="httpStatus" ><![CDATA["400"]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
		
	</flow>

	<flow name="get-by-id">
		<logger doc:name="get by id"
			level="INFO" 
			message="#['Query by id']" 
			category="app"/>

		<flow-ref doc:name="get by filter" 
			name="get-by-filter"/>

		<ee:transform doc:name="get one record" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/json
					---
					if (payload[0] == null) {} else payload[0]]]>
				</ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>	
</mule>